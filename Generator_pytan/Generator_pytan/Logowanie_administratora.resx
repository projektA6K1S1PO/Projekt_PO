<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QC2RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB0AAAAOAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAA
        dgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEA
        bABpAHQAeQAgAD0AIAA3ADUACgAAAAAA/9sAQwACAQECAQECAgICAgICAgMFAwMDAwMGBAQDBQcGBwcH
        BgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMGDAgHCAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAXgBeAwEiAAIRAQMR
        Af/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
        EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElK
        U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAAB
        AgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkj
        M1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5
        eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm
        5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+WSI/Dm4fu7jUCCNytujtuCO33n/AEHvWa8rSuzMzMzH
        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
</value>
  </data>
</root>