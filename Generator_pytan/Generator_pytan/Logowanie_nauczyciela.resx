<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QC+RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB8AAAAOAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBq
        AHAAZQBnACAAdgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAs
        ACAAcQB1AGEAbABpAHQAeQAgAD0AIAAxADAAMAAKAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYE
        BAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcI
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABjAF4D
        ASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
        AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEB
        AQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEI
        FEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hp
        anN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX
        2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD98CGvPVIvQ9X/APrVMnAwBtx29KUUjY/H
        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
</value>
  </data>
</root>