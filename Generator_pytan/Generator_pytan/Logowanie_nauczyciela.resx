<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QC2RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB2AAAAOAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAA
        dgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEA
        bABpAHQAeQAgAD0AIAAxADAAMAAKAAAA/9sAQwACAQECAQECAgICAgICAgMFAwMDAwMGBAQDBQcGBwcH
        BgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMGDAgHCAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAYwBeAwEiAAIRAQMR
        Af/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
        EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElK
        U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAAB
        AgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkj
        M1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5
        eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm
        5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/fAhrz1SL0PV/wD61TJwMAbcdvSlFI2Px7YoAcTgUwgk
        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
</value>
  </data>
</root>