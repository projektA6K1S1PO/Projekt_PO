<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="but_nastepne_pyt.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="but_stop_test.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>