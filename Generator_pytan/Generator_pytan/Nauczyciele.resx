<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QC6RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB6AAAAOAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBq
        AHAAZQBnACAAdgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAs
        ACAAcQB1AGEAbABpAHQAeQAgAD0AIAA3ADUACv/bAEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUH
        BgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4PDQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIADIAMgMBIgAC
        EQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0B
        AgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVG
        R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
        uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGh
        scEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1
        dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri
        4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP35WPYd2cseppJJlWJndhHGgJZmO3AHXPpTun3v
        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
</value>
  </data>
</root>